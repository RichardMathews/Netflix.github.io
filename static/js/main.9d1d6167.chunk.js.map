{"version":3,"sources":["tmdb.js","components/Movies/index.js","components/FeaturedMovie/index.js","components/Header/index.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMoviesInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listWidth","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","radomChosen","floor","random","chosenMovie","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d1d6167.chunk.js","sourcesContent":["const API_KEY = '9d669db85d75297c20847d7db9b18081';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${API_BASE_URL}${endpoint}`);\n  const json = await req.json();\n  return json;\n}\n\nexport default {\n  getHomeList: async () => {\n    return[\n      {\n        slug:'originais',\n        title: 'Originais do Netflix',\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'trending',\n        title: 'Recomendados para Você',\n        items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'toprated',\n        title: 'Em Alta',\n        items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'action',\n        title: 'Ação',\n        items: await basicFetch(`/discover/movie?whith_genres=28&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'comedy',\n        title: 'Comédia',\n        items: await basicFetch(`/discover/movie?whith_genres=35&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'horror',\n        title: 'Terror',\n        items: await basicFetch(`/discover/movie?whith_genres=27&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'romance',\n        title: 'Romance',\n        items: await basicFetch(`/discover/movie?whith_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n      },\n      {\n        slug: 'documentary',\n        title: 'Documentários',\n        items: await basicFetch(`/discover/movie?whith_genres=99&language=pt-BR&api_key=${API_KEY}`)\n      },\n    ]\n  },\n  getMoviesInfo: async (movieId, type) => {\n    let info = {};\n\n    if(movieId) {\n      switch(type) {\n        case 'movie':\n          info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n        break;\n        case 'tv':\n          info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n        break;\n        default:\n          info = null\n        break;\n      }\n    }\n\n    return info;\n  }\n}","import React, { useState } from 'react';\nimport './index.css';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nexport default ({ title, items }) => {\n  const [scrollX, setScrollX] = useState(0);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n\n    if(x > 0) {\n      x = 0;\n    }\n    setScrollX(x);\n  }\n\n  const handleRightArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    let listWidth = items.results.length * 150;\n\n    if((window.innerWidth - listWidth) > x) {\n      x = (window.innerWidth - listWidth) - 60;\n    }\n\n    setScrollX(x);\n  }\n\n  return (\n    <div className=\"movieRow\">\n      <h2>{title}</h2>\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n        <NavigateBeforeIcon style={{fontSize: 50}}/>  \n      </div>\n      <div className=\"movieRow--right\" onClick={handleRightArrow}> \n        <NavigateNextIcon style={{fontSize: 50}}/>\n      </div>\n      <div className=\"movieRow--listarea\">\n        <div className=\"movieRow--list\" style={{ \n          marginLeft: scrollX,\n          width: items.results.length * 150\n        }}>\n          {items.results.length > 0 && items.results.map((item, key) => (\n            <div key={key} className=\"movieRow--item\">\n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport './index.css';\n\nexport default ({item}) => {\n  let firstDate = new Date(item.first_air_date);\n  let genres  = [];\n\n  for(let i in item.genres) {\n    genres.push(item.genres[i].name);\n  }\n\n  let description = item.overview;\n  \n  if(description.length > 200) {\n    description = description.substring(0, 200)+\"...\"\n  }\n\n  return (\n    <section className=\"featured\" style={{\n      // Ajusta o tamanho da imagem dependendo do tamanho do monitor\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n    }}>\n     <div className=\"featured--vertical\">\n      <div className=\"featured--horizontal\">\n        <div className=\"featured--name\">{item.original_name}</div>\n        <div className=\"featured--info\">\n          <div className=\"featured--points\">{item.vote_average} pontos</div>\n          <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n          <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n        </div>\n        <div className=\"featured--description\">{description}</div>\n        <div className=\"featured--buttons\">\n          <a href={(`/watch/${item.id}`)} className=\"featured--watchbutton\">► Assistir</a>\n          <a href={(`/list/add/${item.id}`)} className=\"featured--mylistbutton\">+ Minha Lista</a>\n        </div>\n        <div className=\"featured--genres\">\n          <strong>Gêneros:</strong> {genres.join(', ')}\n        </div>\n      </div>\n     </div>\n    </section>\n  )\n}","import React from 'react';\nimport './index.css';\n\nexport default ({black}) => {\n  return (\n    <header className={black ? \"black\" : ''}>\n      <div className=\"header--logo\">\n        <a href=\"/\">\n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"Netflix\" />\n        </a>\n      </div>\n      <div className=\"header--user\">\n        <a href=\"/\">\n          <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Usuário\"/>\n        </a>\n      </div>\n    </header>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './tmdb';\nimport Movies from './components/Movies';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nexport default () => {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      let originals = list.filter(i => i.slug === 'originais');\n      let radomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1));\n      let chosenMovie = originals[0].items.results[radomChosen];\n      let chosenInfo = await Tmdb.getMoviesInfo(chosenMovie.id, 'tv');\n      \n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if(window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, [])\n\n  return (\n    <div className=\"page\">\n      \n      <Header black={blackHeader}/>\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n      \n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <Movies key={key} title={item.title} items={item.items}/>\n        ))}\n      </section>\n\n      <footer>\n        Feito com <span role=\"img\" aria-label=\"coração\">❤️</span> por Richard Mathews<br/>\n        Direitos de imagem para Netflix <br/>\n        Dados pegos do site Themoviedb.org\n      </footer>\n\n      {movieList.length <= 0 && \n        <div className=\"loading\">\n          <img src=\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\" alt=\"Carregando\"/>\n        </div>\n      }\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}